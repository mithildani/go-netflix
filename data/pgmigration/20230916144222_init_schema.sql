-- +goose Up
-- +goose StatementBegin
create table if not exists movie(
    id int generated by default as identity primary key,

    title varchar(50) not null,
    year int,
    summary text,
    thumbnail text,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp
);


create table if not exists language(
    id int generated by default as identity primary key,

    short_name varchar(10) unique not null,
    display_name varchar(20) not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp
);

CREATE TYPE content_type AS ENUM ('default', 'trailer');

create table if not exists audio(
    movie_id int references movie on delete cascade,
    type content_type,
    language_id int references language on delete restrict,

    url text not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp,

    primary key (movie_id, type, language_id)
);

create table if not exists  quality(
    id int generated by default as identity primary key,

    level int unique not null,
    name varchar(10) not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp
);

create table if not exists video(
    movie_id int references movie on delete cascade,
    type content_type,
    quality_id int references quality on delete restrict,

    url text not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp,

    primary key (movie_id, type, quality_id)
);


create type gender as enum('male', 'female', 'other');

create table if not exists person(
    id int generated by default as identity primary key,

    name varchar(50) not null,
    gender gender not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp
);

create type role as enum('director', 'actor', 'writer', 'producer');

create table if not exists crew(
    movie_id int references movie on delete cascade,
    person_id int references person on delete restrict,
    role role not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp,

    primary key(movie_id, person_id)
);


create table if not exists genre(
    id int generated by default as identity primary key,

    name varchar(50) unique not null,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp
);

create table if not exists movie_genre(
    movie_id int references movie on delete cascade,
    genre_id int references genre on delete cascade,

    created_at timestamp default current_timestamp,
    updated_at timestamp default current_timestamp,

    primary key(movie_id, genre_id)

);
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
drop table if exists audio;

drop table if exists language;

drop table if exists video;

drop table if exists quality;

drop table if exists crew;

drop table if exists person;

drop table if exists movie_genre;

drop table if exists genre;

drop table if exists movie;

drop type if exists content_type;

drop type if exists gender;

drop type if exists role;
-- +goose StatementEnd
